{
	"info": {
		"_postman_id": "59f73820-9d1a-4744-a54b-96032232d574",
		"name": "softwaremind-case-study",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25265864"
	},
	"item": [
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				},
				"description": "This is a GET request to fetch all products from database.\n\nAuthenticate user by Bearer token generated under Authenticate user or Register user if none has been created (register user endpoint)."
			},
			"response": []
		},
		{
			"name": "Get products by category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products/category/House",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"category",
						"House"
					]
				},
				"description": "This is a GET request to fetch all products with given category from database.\n\nAvailable categories: Electronics, House, Garden, Car, Music\n\nAuthenticate user by Bearer token generated under Authenticate user or Register user if none has been created (register user endpoint)."
			},
			"response": []
		},
		{
			"name": "Get product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products/d6166869-2591-4336-affb-19e48f421df5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"d6166869-2591-4336-affb-19e48f421df5"
					]
				},
				"description": "This is a GET request to fetch all products with given id from database.\n\nAuthenticate user by Bearer token generated under Authenticate user or Register user if none has been created (register user endpoint)."
			},
			"response": []
		},
		{
			"name": "Create product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"\",\n    \"description\": \"\",\n    \"price\": \"\",\n    \"category\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				},
				"description": "This is a POST request to create product in database.\n\nAuthenticate user by Bearer token generated under Authenticate user or Register user if none has been created (register user endpoint)."
			},
			"response": []
		},
		{
			"name": "Update product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"\",\n    \"description\": \"\",\n    \"price\": \"\",\n    \"category\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products/d6166869-2591-4336-affb-19e48f421df5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"d6166869-2591-4336-affb-19e48f421df5"
					]
				},
				"description": "This is a PUT request to update a product with given id in database.\n\nAuthenticate user by Bearer token generated under Authenticate user or Register user if none has been created (register user endpoint)."
			},
			"response": []
		},
		{
			"name": "Delete product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products/d6166869-2591-4336-affb-19e48f421df5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products",
						"d6166869-2591-4336-affb-19e48f421df5"
					]
				},
				"description": "This is a DELETE request to delete a product with given id from database.\n\nAuthenticate user by Bearer token generated under Authenticate user or Register user if none has been created (register user endpoint)."
			},
			"response": []
		},
		{
			"name": "Register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"\",\n    \"password\": \"\",\n    \"role\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				},
				"description": "This endpoint creates new user in database and returns Bearer token to authenticate him againts Product's endpoints.  \nAvailable roles:\n\nUSER, ADMIN\n\nPermissions:\n\nGet all products: USER, ADMIN\n\nGet products by category: USER, ADMIN\n\nGet product: USER, ADMIN\n\nCreate product: ADMIN\n\nUpdate product: ADMIN\n\nDelete product: ADMIN"
			},
			"response": []
		},
		{
			"name": "Authenticate user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"\",\n    \"password\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/authenticate",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"authenticate"
					]
				},
				"description": "Returns Bearer token for registered user, needed to authenticate againts Product's endpoints."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}